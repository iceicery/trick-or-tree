{"version":3,"sources":["images/home.svg","component/About/About.js","images/badgeBB.png","images/badgeG.png","images/badgeO.png","images/badgeY.png","component/Badge/Badge.js","component/ChampionCard/ChampionCard.js","component/ChampionMap/ChampionMap.js","images/lightbulb-solid.svg","images/map-marked.svg","images/times-solid.svg","component/Tips/Tips.js","images/home-w.svg","images/award.svg","images/redo.svg","data/TreeHuntMap.js","component/CodeEnter/CodeEnter.js","images/treelogoW.png","component/Home/Home.js","images/microscope.svg","images/left.svg","images/right.svg","images/medal.svg","component/Item/Item.js","component/Selection/Selection.js","images/type-palmately-compound-leaf.PNG","images/type-pinnately-compound-leaf.PNG","images/type-simple.PNG","images/type-twice-pinnately-compound-leaf.PNG","images/edge-smooth.PNG","images/edge-coursely-serrate.PNG","images/edge-double-serrate.PNG","images/edge-tipped.PNG","images/edge-tooth.PNG","images/edge-unlobed.PNG","images/arangement-alternate.PNG","images/arangement-opposite.PNG","data/LeafClass.js","images/shape-bell.PNG","images/shape-cross.PNG","images/shape-heart.PNG","images/shape-linear.PNG","images/shape-mitten.PNG","images/shape-needle-like.PNG","images/shape-oblong.PNG","images/shape-oval.PNG","images/shape-scale.PNG","images/shape-spatula.PNG","images/shape-star.PNG","images/shape-triangle.PNG","images/shape-tulip.PNG","component/Result/Result.js","component/TreeHunt/TreeHunt.js","component/TreeHuntMap/TreeHuntMap.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","to","src","home","alt","Badge","badges","getBadgeImg","i","badge1","badge2","badge3","badge4","length","map","badge","image","name","ChampionCard","img_url","family","sname","kingdom","Life","description","location","circumference","height","style","ChampionMap","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","Tips","isTipsOpen","toggleTips","onClick","close","treepins","coor","code","class","ssnAry","CodeEnter","handleTree","useState","ssnValues","setValue","arrayEquals","a","b","Array","isArray","every","val","index","isValid","some","item","handleChange","e","target","maxLength","value","split","fieldName","fieldIndex","parseInt","nextSibling","document","querySelector","focus","lightbulb","award","event","preventDefault","redo","width","type","size","min","max","pattern","onChange","disabled","oneTree","filter","treepin","push","Home","logo","Item","choice","selected","handleSelect","handleUnselect","itemClass","setItemClass","includes","Selection","title","choices","n","gridTemplateColumns","leafShape","leafArrange","alternate","opposite","leafType","palmately_compound","pinnately_compound","simple","twice_pinnately_compound","leafEdge","smooth","edge_coursely_serrate","edge_double_serrate","tipped","tooth","unlobed","Result","text","plant","children","toggleResultOpen","isResultOpen","TreeHunt","tree","handleBadge","setSelected","currentIndex","setCurrentIndex","setIsResultOpen","isCorrect","setIsCorrect","newselect","unselectItem","console","log","medal","microscope","transform","totalSelectPage","right","left","TreeHuntMap","isMapOpen","toggleMap","pin","App","setIsTipsOpen","setIsMapOpen","setTree","setBadges","basename","window","pathname","exact","path","newBadge","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33bfd547.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home.831db11d.svg\";","import { Link } from 'react-router-dom';\r\nimport './About.css';\r\nimport '../ChampionMap/ChampionMap.css';\r\nimport home from '../../images/home.svg';\r\n\r\nexport default function About() {\r\n  return (\r\n    <section className=\"about\">\r\n      <Link to=\"/\" className=\"about__button-home\">\r\n        <img src={home} alt=\"go home\" className=\"championmap__button-img\" />\r\n      </Link>\r\n      <h1>About</h1>\r\n      <p>\r\n        Alabama has over 140 state champion trees on the books and is home to\r\n        four national champions. Go to the champion tree map to explore them.\r\n      </p>\r\n      <Link to=\"/champion-map\">\r\n        <button className=\"home__button home__button-2\">\r\n          AL Champion Trees Map\r\n        </button>\r\n      </Link>\r\n      <p>\r\n        Want to know more about your neiborhood alabama native trees? Go to the\r\n        Neiborhood Tree hunt! Find the tree with QR tag, observe with us and\r\n        identify the tree. You could know more about them and earn badges.You\r\n        could be a dendrologist.\r\n      </p>\r\n      <Link to=\"/code-enter\">\r\n        <button className=\"home__button home__button-3\">Local Tree Hunt</button>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/badgeBB.b57779ab.png\";","export default __webpack_public_path__ + \"static/media/badgeG.c78ab70b.png\";","export default __webpack_public_path__ + \"static/media/badgeO.69bd8e33.png\";","export default __webpack_public_path__ + \"static/media/badgeY.d5025fa2.png\";","import './Badge.css';\r\nimport badge1 from '../../images/badgeBB.png';\r\nimport badge2 from '../../images/badgeG.png';\r\nimport badge3 from '../../images/badgeO.png';\r\nimport badge4 from '../../images/badgeY.png';\r\nimport home from '../../images/home.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Badge({ badges }) {\r\n  function getBadgeImg(i) {\r\n    switch (i % 4) {\r\n      case 0:\r\n        return badge1;\r\n      case 1:\r\n        return badge2;\r\n\r\n      case 2:\r\n        return badge3;\r\n\r\n      default:\r\n        return badge4;\r\n    }\r\n  }\r\n  return (\r\n    <section className=\"badge\">\r\n      <Link to=\"/\" className=\"badge__button-home\">\r\n        <img src={home} alt=\"go home\" className=\"championmap__button-img\" />\r\n      </Link>\r\n      <h2>You Earned {badges.length} Badges!</h2>\r\n      <Link to=\"/code-enter\">\r\n        <button className=\"badge__button\">More tree hunt</button>\r\n      </Link>\r\n      <ul className=\"badge__list\">\r\n        {badges.map((badge, i) => (\r\n          <li className=\"badge__list-item\" key={i}>\r\n            <img className=\"badge__list-out\" src={getBadgeImg(i)} alt=\"badge\" />\r\n            <img\r\n              className=\"badge__list-in\"\r\n              src={badge.image}\r\n              alt={badge.name}\r\n            />\r\n            <p className=\"badge__list-name\">{badge.name}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","import './ChampionCard.css';\r\n\r\nexport default function ChampionCard({\r\n  img_url,\r\n  name,\r\n  family,\r\n  sname,\r\n  kingdom,\r\n  Life,\r\n  description,\r\n  location,\r\n  circumference,\r\n  height,\r\n}) {\r\n  return (\r\n    <div className=\"championcard\">\r\n      <div>\r\n        <h2 className=\"championcard__title\">{name}</h2>\r\n        <div className=\"championcard__container\">\r\n          <img src={img_url} alt={name} className=\"championcard__img\" />\r\n\r\n          <div className=\"championcard__info-box\">\r\n            <p className=\"championcard__info\">\r\n              Location:<span>{location}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Circumference:<span>{circumference}</span>ft\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Height:<span>{height}</span>ft\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Family:<span>{family}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Scienctific name:\r\n              <br />\r\n              <span>{sname}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Kingdom:<span>{kingdom}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Life expectancy:\r\n              <br />\r\n              <span>{Life}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p className=\"championcard__description\">{description}</p>\r\n      </div>\r\n      <div className=\"championcard__compare\">\r\n        <div\r\n          style={{ height: `calc(${height} / 6 * 20px)` }}\r\n          className=\"championcard__compare-tree\"\r\n        ></div>\r\n        <div className=\"championcard__compare-kid\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './ChampionMap.css';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport ChampionCard from '../ChampionCard/ChampionCard';\r\nimport { Link } from 'react-router-dom';\r\nimport home from '../../images/home.svg';\r\n\r\nexport default function ChampionMap() {\r\n  return (\r\n    <section className=\"championmap\">\r\n      <Link to=\"/\" className=\"championmap__button\">\r\n        <img src={home} alt=\"go home\" className=\"championmap__button-img\" />\r\n      </Link>\r\n      <MapContainer\r\n        center={[32.5, -86.7]}\r\n        zoom={6.5}\r\n        scrollWheelZoom={false}\r\n        className=\"championmap__map\"\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={[32.95947947133575, -86.8595523288862]}>\r\n          <Popup>\r\n            <ChampionCard\r\n              img_url=\"https://images.unsplash.com/photo-1602693154446-9174be270281?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTUzfHxtYWdub2xpYSUyMGFjdW1pbmF0YXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n              name=\"MAGNOLIA\"\r\n              family=\"Magnoliaceae\"\r\n              sname=\"Magnolia\"\r\n              kingdom=\"Plantae\"\r\n              Life=\"80 to 120 years\"\r\n              description=\"Magnolia is a large genus of about 210 flowering plant species in the subfamily Magnolioideae of the family Magnoliaceae. It is named after French botanist Pierre Magnol. Magnolia is an ancient genus. Appearing before bees did, the flowers are theorized to have evolved to encourage pollination by beetles.\"\r\n              location=\"Madison\"\r\n              circumference=\"112\"\r\n              height=\"156\"\r\n            />\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/lightbulb-solid.8d62fb45.svg\";","export default __webpack_public_path__ + \"static/media/map-marked.b7194aaf.svg\";","export default __webpack_public_path__ + \"static/media/times-solid.ea7c95d7.svg\";","import './Tips.css';\r\nimport close from '../../images/times-solid.svg';\r\n\r\nexport default function Tips({ isTipsOpen, toggleTips }) {\r\n  return (\r\n    <section className={isTipsOpen ? 'tips' : 'hidden'}>\r\n      <button className=\"tips__button-close\" onClick={toggleTips}>\r\n        <img src={close} alt=\"close\" className=\"tips__button-img\" />\r\n      </button>\r\n      <h1>Tips for Indentifing Trees</h1>\r\n      <ul>\r\n        <li>\r\n          Always start at the beginning of the key and follow it step by step.\r\n        </li>\r\n        <li>\r\n          Always read both choices, even if the first choice sounds correct. The\r\n          second one may sound even better.\r\n        </li>\r\n        <li>\r\n          If the choice between two statements is not clear, or you don’t have\r\n          enough information to make the choice, follow both choices to their\r\n          conclusions. Then, try to choose between the descriptions of the two\r\n          resulting answers.\r\n        </li>\r\n        <li>\r\n          When measurements are given, as in the size of the leaves, don’t\r\n          guess. Use a ruler.\r\n        </li>\r\n        <li>\r\n          Become familiar with the botanical terms used to describe trees.\r\n        </li>\r\n      </ul>\r\n      <p>&copy; ALABAMA A&M AND AUBURN UNIVERSITIES</p>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/home-w.213029c6.svg\";","export default __webpack_public_path__ + \"static/media/award.a5b790c0.svg\";","export default __webpack_public_path__ + \"static/media/redo.7448f554.svg\";","export const treepins = [\r\n  /*{\r\n    name: 'Floating clouds maple',\r\n    coor: [34.7071568, -86.6321067],\r\n    code: [1, 4, 3, 2],\r\n  },*/\r\n  {\r\n    name: 'Spanish Oak',\r\n    coor: [34.708008, -86.634358],\r\n    code: ['1', '3', '2', '8'],\r\n    image:\r\n      'https://images.unsplash.com/photo-1572526159456-2e032b4def60?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8b2FrfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60',\r\n    class: ['Simple', 'Tipped', 'Alternate', 'Cross'],\r\n  },\r\n  { name: 'Winged elm', coor: [34.706788, -86.634162] },\r\n  { name: 'September elm', coor: [34.707107, -86.634231] },\r\n  { name: 'Red cedar', coor: [34.707261, -86.634346] },\r\n  { name: 'Scarlet oak', coor: [34.707666, -86.634285] },\r\n  { name: 'Southern red oak', coor: [34.707714, -86.634333] },\r\n  { name: 'Old field pine', coor: [34.707951, -86.634298] },\r\n];\r\n","import { useState, React } from 'react';\r\nimport './CodeEnter.css';\r\nimport lightbulb from '../../images/lightbulb-solid.svg';\r\nimport map from '../../images/map-marked.svg';\r\nimport Tips from '../Tips/Tips';\r\nimport home from '../../images/home-w.svg';\r\nimport award from '../../images/award.svg';\r\nimport redo from '../../images/redo.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { treepins } from '../../data/TreeHuntMap';\r\nconst ssnAry = [];\r\ntreepins.map((item) => ssnAry.push(item.code));\r\n\r\nexport default function CodeEnter({ isTipsOpen, toggleTips, handleTree }) {\r\n  const numOfFields = 4;\r\n  const [ssnValues, setValue] = useState([]);\r\n\r\n  function arrayEquals(a, b) {\r\n    return (\r\n      Array.isArray(a) &&\r\n      Array.isArray(b) &&\r\n      a.length === b.length &&\r\n      a.every((val, index) => val === b[index])\r\n    );\r\n  }\r\n  const isValid = ssnAry.some((item) => arrayEquals(item, ssnValues));\r\n\r\n  function handleChange(e) {\r\n    const { maxLength, value, name } = e.target;\r\n    const [fieldName, fieldIndex] = name.split('-');\r\n    if (value.length >= maxLength) {\r\n      if (parseInt(fieldIndex, 10) < numOfFields) {\r\n        const nextSibling = document.querySelector(\r\n          `input[name=${fieldName}-${parseInt(fieldIndex, 10) + 1}]`\r\n        );\r\n        if (nextSibling !== null) {\r\n          nextSibling.focus();\r\n        }\r\n      }\r\n    }\r\n    setValue([...ssnValues, value]);\r\n  }\r\n\r\n  function handleReset(event) {\r\n    event.preventDefault();\r\n    setValue([]);\r\n    [1, 2, 3, 4].map(\r\n      (i) => (document.querySelector(`input[name=ssn-${i}]`).value = '')\r\n    );\r\n  }\r\n\r\n  function handleGo() {\r\n    const oneTree = treepins.filter((treepin) =>\r\n      arrayEquals(treepin.code, ssnValues)\r\n    );\r\n    handleTree(oneTree[0]);\r\n  }\r\n\r\n  return (\r\n    <section className=\"codeenter\">\r\n      <Tips toggleTips={toggleTips} isTipsOpen={isTipsOpen} />\r\n      <Link to=\"/\" className=\"codeenter__button-home\">\r\n        <img src={home} alt=\"go home\" className=\"championmap__button-img\" />\r\n      </Link>\r\n      <h2 className=\"codeenter__title\">\r\n        <span className=\"codeenter__cap\">Welcome! </span>Get ready to indentify\r\n        the tree! Click lightbulb to get tips.\r\n      </h2>\r\n      <button className=\"coddenter__button-tip\" onClick={toggleTips}>\r\n        <img\r\n          src={lightbulb}\r\n          alt=\"got to tips\"\r\n          className=\"coddenter__button-img\"\r\n        />\r\n      </button>\r\n      <h2 className=\"codeenter__title\">Get tree hunt map.</h2>\r\n      <Link to=\"/treehunt-map\" className=\"coddenter__button-tip\">\r\n        <img\r\n          src={map}\r\n          alt=\"go to tree hunt map\"\r\n          className=\"coddenter__button-img-l\"\r\n        />\r\n      </Link>\r\n      <h2 className=\"codeenter__title\">See badges you earned</h2>\r\n      <Link to=\"/badge\" className=\"coddenter__button-tip\">\r\n        <img\r\n          src={award}\r\n          alt=\"go to tree hunt map\"\r\n          className=\"coddenter__button-img-l\"\r\n        />\r\n      </Link>\r\n      <h2 className=\"codeenter__title\">Enter Four Digit Code</h2>\r\n      <form className=\"codeenter__form\">\r\n        <div className=\"codeenter__input-box\">\r\n          <button className=\"codeenter__button-redo\" onClick={handleReset}>\r\n            <img src={redo} alt=\"reset the code\" style={{ width: 20 }} />\r\n          </button>\r\n          <input\r\n            type=\"number\"\r\n            name=\"ssn-1\"\r\n            maxLength={1}\r\n            size=\"1\"\r\n            min=\"0\"\r\n            max=\"9\"\r\n            pattern=\"[0-9]{1}\"\r\n            className=\"codeenter__input\"\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"ssn-2\"\r\n            maxLength={1}\r\n            size=\"1\"\r\n            min=\"0\"\r\n            max=\"9\"\r\n            pattern=\"[0-9]{1}\"\r\n            className=\"codeenter__input\"\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"ssn-3\"\r\n            maxLength={1}\r\n            size=\"1\"\r\n            min=\"0\"\r\n            max=\"9\"\r\n            pattern=\"[0-9]{1}\"\r\n            className=\"codeenter__input\"\r\n            onChange={handleChange}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"ssn-4\"\r\n            maxLength={1}\r\n            size=\"1\"\r\n            min=\"0\"\r\n            max=\"9\"\r\n            pattern=\"[0-9]{1}\"\r\n            className=\"codeenter__input\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Link to=\"/TreeHunt\">\r\n            <button\r\n              className=\"codeenter__button\"\r\n              disabled={!isValid}\r\n              onClick={handleGo}\r\n            >\r\n              GO\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className={isValid ? 'hidden' : 'codeenter__error'}>\r\n          <div className=\"codeenter__arrow-up\"></div>\r\n          Please Enter Valid Code.\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/treelogoW.b214c2ee.png\";","import { Link } from 'react-router-dom';\r\nimport './Home.css';\r\nimport logo from '../../images/treelogoW.png';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home__logo-box\">\r\n        <img src={logo} alt=\"Alabama trees logo\" className=\"home__logo\" />\r\n        <p className=\"home__text\">Alabama Trick Or Tree</p>\r\n        <p className=\"home__text\">Explore | Learn | Play</p>\r\n      </div>\r\n      <div className=\"home__button-box\">\r\n        <Link to=\"/about\">\r\n          <button className=\"home__button home__button-1\">Learn More</button>\r\n        </Link>\r\n        <Link to=\"/champion-map\">\r\n          <button className=\"home__button home__button-2\">\r\n            AL Champion Trees Map\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/code-enter\">\r\n          <button className=\"home__button home__button-3\">\r\n            Local Tree Hunt\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/microscope.82c978f5.svg\";","export default __webpack_public_path__ + \"static/media/left.e1553cb5.svg\";","export default __webpack_public_path__ + \"static/media/right.67c7cff6.svg\";","export default __webpack_public_path__ + \"static/media/medal.464d2ce1.svg\";","import { useState } from 'react';\r\nimport './Item.css';\r\n\r\nexport default function Item({\r\n  choice,\r\n  selected,\r\n  handleSelect,\r\n  handleUnselect,\r\n}) {\r\n  const [itemClass, setItemClass] = useState('selection__list-unselect');\r\n\r\n  function toggleSelect() {\r\n    if (selected.includes(choice.description)) {\r\n      handleUnselect(choice.description);\r\n      setItemClass('selection__list-unselect');\r\n      return;\r\n    }\r\n    handleSelect(choice.description);\r\n    setItemClass('selection__list-select');\r\n  }\r\n  return (\r\n    <li className=\"selection__list-item\" onClick={toggleSelect}>\r\n      <img\r\n        className={`${itemClass} selection__img`}\r\n        src={choice.image}\r\n        alt={choice.description}\r\n      />\r\n      <p className=\"selection__description\">{choice.description}</p>\r\n    </li>\r\n  );\r\n}\r\n","import Item from '../Item/Item';\r\nimport './Selection.css';\r\n\r\nexport default function Selection({\r\n  title,\r\n  choices,\r\n  n,\r\n  selected,\r\n  handleSelect,\r\n  handleUnselect,\r\n}) {\r\n  return (\r\n    <section className=\"selection\">\r\n      <h2 className=\"selection__title\">{title}</h2>\r\n      <ul\r\n        className=\"selection__list\"\r\n        style={{ gridTemplateColumns: `repeat(${n},1fr)` }}\r\n      >\r\n        {choices.map((choice, i) => (\r\n          <Item\r\n            choice={choice}\r\n            key={i}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/type-palmately-compound-leaf.76480091.PNG\";","export default __webpack_public_path__ + \"static/media/type-pinnately-compound-leaf.deb3b16a.PNG\";","export default __webpack_public_path__ + \"static/media/type-simple.0a879415.PNG\";","export default __webpack_public_path__ + \"static/media/type-twice-pinnately-compound-leaf.5ed2062c.PNG\";","export default __webpack_public_path__ + \"static/media/edge-smooth.66a0929d.PNG\";","export default __webpack_public_path__ + \"static/media/edge-coursely-serrate.89676c77.PNG\";","export default __webpack_public_path__ + \"static/media/edge-double-serrate.bdb539b3.PNG\";","export default __webpack_public_path__ + \"static/media/edge-tipped.f59d6015.PNG\";","export default __webpack_public_path__ + \"static/media/edge-tooth.95c235df.PNG\";","export default __webpack_public_path__ + \"static/media/edge-unlobed.013c07e7.PNG\";","export default __webpack_public_path__ + \"static/media/arangement-alternate.fe038689.PNG\";","export default __webpack_public_path__ + \"static/media/arangement-opposite.c24d0046.PNG\";","///type\r\nimport palmately_compound from '../images/type-palmately-compound-leaf.PNG';\r\nimport pinnately_compound from '../images/type-pinnately-compound-leaf.PNG';\r\nimport simple from '../images/type-simple.PNG';\r\nimport twice_pinnately_compound from '../images/type-twice-pinnately-compound-leaf.PNG';\r\n////edge\r\nimport smooth from '../images/edge-smooth.PNG';\r\nimport edge_coursely_serrate from '../images/edge-coursely-serrate.PNG';\r\nimport edge_double_serrate from '../images/edge-double-serrate.PNG';\r\nimport tipped from '../images/edge-tipped.PNG';\r\nimport tooth from '../images/edge-tooth.PNG';\r\nimport unlobed from '../images/edge-unlobed.PNG';\r\n/////arrange\r\nimport alternate from '../images/arangement-alternate.PNG';\r\nimport opposite from '../images/arangement-opposite.PNG';\r\n/////shape\r\nimport bell from '../images/shape-bell.PNG';\r\nimport cross from '../images/shape-cross.PNG';\r\nimport heart from '../images/shape-heart.PNG';\r\nimport linear from '../images/shape-linear.PNG';\r\nimport mitten from '../images/shape-mitten.PNG';\r\nimport needle from '../images/shape-needle-like.PNG';\r\nimport oblong from '../images/shape-oblong.PNG';\r\nimport oval from '../images/shape-oval.PNG';\r\nimport scale from '../images/shape-scale.PNG';\r\nimport spatula from '../images/shape-spatula.PNG';\r\nimport star from '../images/shape-star.PNG';\r\nimport triangle from '../images/shape-triangle.PNG';\r\nimport tulip from '../images/shape-tulip.PNG';\r\n\r\nexport const leafShape = {\r\n  title: 'Leaf Shape',\r\n  choices: [\r\n    { image: bell, description: 'Bell' },\r\n    { image: cross, description: 'Cross' },\r\n    { image: heart, description: 'Heart' },\r\n    { image: linear, description: 'Linear' },\r\n    { image: mitten, description: 'Mitten' },\r\n    { image: needle, description: 'Needle' },\r\n    { image: oblong, description: 'Oblong' },\r\n    { image: oval, description: 'Oval' },\r\n    { image: scale, description: 'Scale' },\r\n    { image: spatula, description: 'Spatula' },\r\n    { image: star, description: 'Star' },\r\n    { image: triangle, description: 'Triangle' },\r\n    { image: tulip, description: 'Tulip' },\r\n  ],\r\n};\r\n\r\nexport const leafArrange = {\r\n  title: 'Leaf Arrange',\r\n  choices: [\r\n    { image: alternate, description: 'Alternate' },\r\n    { image: opposite, description: 'Opposite' },\r\n  ],\r\n};\r\n\r\nexport const leafType = {\r\n  title: 'Leaf Type',\r\n  choices: [\r\n    {\r\n      image: palmately_compound,\r\n      description: 'Palmately Compound',\r\n    },\r\n    {\r\n      image: pinnately_compound,\r\n      description: 'Pinnately Compound',\r\n    },\r\n    {\r\n      image: simple,\r\n      description: 'Simple',\r\n    },\r\n    {\r\n      image: twice_pinnately_compound,\r\n      description: 'Twice Pinnately Compound',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const leafEdge = {\r\n  title: 'Leaf Edge',\r\n  choices: [\r\n    {\r\n      image: smooth,\r\n      description: 'Smooth',\r\n    },\r\n    {\r\n      image: edge_coursely_serrate,\r\n      description: 'Edge Coursely Serrate',\r\n    },\r\n    {\r\n      image: edge_double_serrate,\r\n      description: 'Edge Double Serrate',\r\n    },\r\n    {\r\n      image: tipped,\r\n      description: 'Tipped',\r\n    },\r\n    {\r\n      image: tooth,\r\n      description: 'Tooth',\r\n    },\r\n    {\r\n      image: unlobed,\r\n      description: 'Unlobed',\r\n    },\r\n  ],\r\n};\r\n","export default __webpack_public_path__ + \"static/media/shape-bell.ddf468c8.PNG\";","export default __webpack_public_path__ + \"static/media/shape-cross.ae66ad59.PNG\";","export default __webpack_public_path__ + \"static/media/shape-heart.52fa8d0b.PNG\";","export default __webpack_public_path__ + \"static/media/shape-linear.3dbba6b1.PNG\";","export default __webpack_public_path__ + \"static/media/shape-mitten.547c2149.PNG\";","export default __webpack_public_path__ + \"static/media/shape-needle-like.e3e3532f.PNG\";","export default __webpack_public_path__ + \"static/media/shape-oblong.9124c2f0.PNG\";","export default __webpack_public_path__ + \"static/media/shape-oval.8ff41a8e.PNG\";","export default __webpack_public_path__ + \"static/media/shape-scale.6d17d42e.PNG\";","export default __webpack_public_path__ + \"static/media/shape-spatula.51cdabab.PNG\";","export default __webpack_public_path__ + \"static/media/shape-star.6e4ec36d.PNG\";","export default __webpack_public_path__ + \"static/media/shape-triangle.db0cc738.PNG\";","export default __webpack_public_path__ + \"static/media/shape-tulip.90b78a69.PNG\";","import './Result.css';\r\nimport close from '../../images/times-solid.svg';\r\n\r\nexport default function Result({\r\n  text,\r\n  plant,\r\n  image,\r\n  alt,\r\n  children,\r\n  toggleResultOpen,\r\n  isResultOpen,\r\n}) {\r\n  return (\r\n    <div className={isResultOpen ? 'result' : 'hidden'}>\r\n      <button className=\"tips__button-close\">\r\n        <img\r\n          src={close}\r\n          alt=\"close\"\r\n          className=\"tips__button-img\"\r\n          onClick={toggleResultOpen}\r\n        />\r\n      </button>\r\n      <img src={image} alt={alt} className=\"result__img\" />\r\n      <h2 className=\"result__text\">{text}</h2>\r\n      <h2 className=\"result__name\">{plant}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import './TreeHunt.css';\r\nimport lightbulb from '../../images/lightbulb-solid.svg';\r\nimport microscope from '../../images/microscope.svg';\r\nimport left from '../../images/left.svg';\r\nimport right from '../../images/right.svg';\r\nimport medal from '../../images/medal.svg';\r\nimport Tips from '../Tips/Tips';\r\nimport home from '../../images/home-w.svg';\r\nimport Selection from '../Selection/Selection';\r\nimport {\r\n  leafType,\r\n  leafEdge,\r\n  leafArrange,\r\n  leafShape,\r\n} from '../../data/LeafClass';\r\nimport { useState } from 'react';\r\nimport Result from '../Result/Result';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function TreeHunt({\r\n  toggleTips,\r\n  isTipsOpen,\r\n  tree,\r\n  handleBadge,\r\n  badges,\r\n}) {\r\n  const [selected, setSelected] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const totalSelectPage = 2;\r\n  const [isResultOpen, setIsResultOpen] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  console.log(tree.class);\r\n  console.log(selected);\r\n\r\n  function toggleResultOpen() {\r\n    setIsResultOpen(!isResultOpen);\r\n  }\r\n\r\n  function checkResult() {\r\n    toggleResultOpen();\r\n    if (tree.class.length !== selected.length) {\r\n      setIsCorrect(false);\r\n      return;\r\n    } else if (tree.class.some((i) => !selected.includes(i))) {\r\n      setIsCorrect(false);\r\n      return;\r\n    }\r\n    setIsCorrect(true);\r\n  }\r\n\r\n  function getBadge() {\r\n    handleBadge(tree);\r\n  }\r\n  console.log(isCorrect);\r\n\r\n  function moveRight() {\r\n    if (currentIndex >= totalSelectPage - 1) {\r\n      setCurrentIndex(totalSelectPage - 1);\r\n      return;\r\n    }\r\n    setCurrentIndex(currentIndex + 1);\r\n  }\r\n\r\n  function moveLeft() {\r\n    if (currentIndex <= 0) {\r\n      setCurrentIndex(0);\r\n      return;\r\n    }\r\n    setCurrentIndex(currentIndex - 1);\r\n  }\r\n\r\n  function handleSelect(newselect) {\r\n    setSelected([...selected, newselect]);\r\n  }\r\n  function handleUnselect(unselectItem) {\r\n    setSelected(selected.filter((i) => i !== unselectItem));\r\n  }\r\n\r\n  return (\r\n    <section className=\"treehunt\">\r\n      <Tips toggleTips={toggleTips} isTipsOpen={isTipsOpen} />\r\n      {isCorrect ? (\r\n        <Result\r\n          text=\"Great observe! You identfy all the items and find:\"\r\n          plant={tree.name}\r\n          image={medal}\r\n          alt=\"medal\"\r\n          toggleResultOpen={toggleResultOpen}\r\n          isResultOpen={isResultOpen}\r\n        >\r\n          <Link to=\"/badge\">\r\n            <button className=\"result__button\" onClick={getBadge}>\r\n              Get Badge\r\n            </button>\r\n          </Link>\r\n        </Result>\r\n      ) : (\r\n        <Result\r\n          text=\"Try again, you can do it. Pick only one of each.\"\r\n          image={microscope}\r\n          alt=\"microscope\"\r\n          toggleResultOpen={toggleResultOpen}\r\n          isResultOpen={isResultOpen}\r\n        ></Result>\r\n      )}\r\n\r\n      <div className=\"treehunt__title-box\">\r\n        <h2 className=\"treehunt__title\">Pick the best one</h2>\r\n        <div className=\"treehunt__button-box\">\r\n          <button className=\"coddenter__button-tip\" onClick={toggleTips}>\r\n            <img src={lightbulb} alt=\"tips\" className=\"coddenter__button-img\" />\r\n          </button>\r\n          <Link to=\"/\" className=\"treehunt__button-home\">\r\n            <img src={home} alt=\"go home\" className=\"championmap__button-img\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"treehunt__container\"\r\n        style={{\r\n          transform: `translateX(calc(100vw * -${currentIndex}))`,\r\n        }}\r\n      >\r\n        <div className=\"treehunt__items\">\r\n          <Selection\r\n            title={leafType.title}\r\n            choices={leafType.choices}\r\n            n={4}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <Selection\r\n            title={leafEdge.title}\r\n            choices={leafEdge.choices}\r\n            n={6}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <Selection\r\n            title={leafArrange.title}\r\n            choices={leafArrange.choices}\r\n            n={2}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <button className=\"treehunt__button\" onClick={moveRight}>\r\n            Next\r\n            <img\r\n              src={right}\r\n              alt=\"next right\"\r\n              className=\"treehunt__button-img\"\r\n            />\r\n          </button>\r\n        </div>\r\n        <div className=\"treehunt__items\">\r\n          <Selection\r\n            title={leafShape.title}\r\n            choices={leafShape.choices}\r\n            n={4}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <button className=\"treehunt__button\" onClick={moveLeft}>\r\n            <img src={left} alt=\"next left\" className=\"treehunt__button-img\" />\r\n            Back\r\n          </button>\r\n          <button className=\"treehunt__button-check\" onClick={checkResult}>\r\n            Check\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport './TreeHuntMap.css';\r\nimport { treepins } from '../../data/TreeHuntMap';\r\nimport close from '../../images/times-solid.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport home from '../../images/home.svg';\r\n\r\nexport default function TreeHuntMap({ isMapOpen, toggleMap }) {\r\n  return (\r\n    <section className=\"treehuntmap\">\r\n      <div>\r\n        <Link\r\n          to=\"/code-enter\"\r\n          className=\"treehuntmap__button-close\"\r\n          onClick={toggleMap}\r\n        >\r\n          <img src={close} alt=\"close\" className=\"tips__button-img\" />\r\n        </Link>\r\n        <Link to=\"/\" className=\"championmap__button\">\r\n          <img src={home} alt=\"go home\" className=\"championmap__button-img\" />\r\n        </Link>\r\n      </div>\r\n      <MapContainer\r\n        center={[34.707261, -86.634346]}\r\n        zoom={20}\r\n        scrollWheelZoom={false}\r\n        className=\"treehunt__map\"\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {treepins.map((pin, i) => (\r\n          <Marker key={i} position={pin.coor}>\r\n            <Popup>\r\n              <p>{pin.name}</p>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </section>\r\n  );\r\n}\r\n","import { useState, React } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport About from './component/About/About';\r\nimport Badge from './component/Badge/Badge';\r\nimport ChampionMap from './component/ChampionMap/ChampionMap';\r\nimport CodeEnter from './component/CodeEnter/CodeEnter';\r\nimport Home from './component/Home/Home';\r\nimport TreeHunt from './component/TreeHunt/TreeHunt';\r\nimport TreeHuntMap from './component/TreeHuntMap/TreeHuntMap';\r\n\r\nfunction App() {\r\n  const [isTipsOpen, setIsTipsOpen] = useState(false);\r\n  const [isMapOpen, setIsMapOpen] = useState(true);\r\n  const [tree, setTree] = useState({});\r\n  const [badges, setBadges] = useState([]);\r\n\r\n  function handleTree(tree) {\r\n    setTree(tree);\r\n  }\r\n\r\n  function handleBadge(newBadge) {\r\n    setBadges([...badges, newBadge]);\r\n  }\r\n  function toggleTips() {\r\n    setIsTipsOpen(!isTipsOpen);\r\n  }\r\n\r\n  function toggleMap() {\r\n    setIsMapOpen(!isMapOpen);\r\n  }\r\n\r\n  return (\r\n    <Router basename={window.location.pathname || ''}>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/champion-map\">\r\n            <ChampionMap />\r\n          </Route>\r\n          <Route path=\"/treehunt-map\">\r\n            <TreeHuntMap />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/code-enter\">\r\n            <CodeEnter\r\n              isTipsOpen={isTipsOpen}\r\n              toggleTips={toggleTips}\r\n              isMapOpen={isMapOpen}\r\n              toggleMap={toggleMap}\r\n              tree={tree}\r\n              handleTree={handleTree}\r\n            />\r\n          </Route>\r\n          <Route path=\"/treehunt\">\r\n            <TreeHunt\r\n              toggleTips={toggleTips}\r\n              isTipsOpen={isTipsOpen}\r\n              isMapOpen={isMapOpen}\r\n              toggleMap={toggleMap}\r\n              tree={tree}\r\n              handleBadge={handleBadge}\r\n              badges={badges}\r\n            />\r\n          </Route>\r\n          <Route path=\"/badge\">\r\n            <Badge badges={badges} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}