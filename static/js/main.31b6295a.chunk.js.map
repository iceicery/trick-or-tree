{"version":3,"sources":["component/About/About.js","component/ChampionCard/ChampionCard.js","component/ChampionMap/ChampionMap.js","images/lightbulb-solid.svg","images/map-marked.svg","images/times-solid.svg","component/Tips/Tips.js","data/TreeHuntMap.js","component/TreeHuntMap/TreeHuntMap.js","component/CodeEnter/CodeEnter.js","images/treelogoW.png","component/Home/Home.js","images/left.svg","images/right.svg","component/Item/Item.js","component/Selection/Selection.js","images/type-palmately-compound-leaf.PNG","images/type-pinnately-compound-leaf.PNG","images/type-simple.PNG","images/type-twice-pinnately-compound-leaf.PNG","images/edge-smooth.PNG","images/edge-coursely-serrate.PNG","images/edge-double-serrate.PNG","images/edge-tipped.PNG","images/edge-tooth.PNG","images/edge-unlobed.PNG","images/arangement-alternate.PNG","images/arangement-opposite.PNG","data/LeafClass.js","images/shape-bell.PNG","images/shape-cross.PNG","images/shape-heart.PNG","images/shape-linear.PNG","images/shape-mitten.PNG","images/shape-needle-like.PNG","images/shape-oblong.PNG","images/shape-oval.PNG","images/shape-scale.PNG","images/shape-spatula.PNG","images/shape-star.PNG","images/shape-triangle.PNG","images/shape-tulip.PNG","component/TreeHunt/TreeHunt.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","to","ChampionCard","img_url","name","family","sname","kingdom","Life","description","location","circumference","height","src","alt","style","ChampionMap","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","Tips","isTipsOpen","toggleTips","onClick","close","treepins","coor","TreeHuntMap","isMapOpen","toggleMap","map","pin","i","CodeEnter","console","log","useState","ssn1","ssn2","ssn3","ssnValues","setValue","handleChange","e","target","maxLength","value","split","fieldName","fieldIndex","length","parseInt","nextSibling","document","querySelector","focus","lightbulb","type","size","min","max","pattern","onChange","Home","logo","Item","choice","selected","handleSelect","handleUnselect","itemClass","setItemClass","includes","image","Selection","title","choices","n","gridTemplateColumns","leafShape","leafArrange","alternate","opposite","leafType","palmately_compound","pinnately_compound","simple","twice_pinnately_compound","leafEdge","smooth","edge_coursely_serrate","edge_double_serrate","tipped","tooth","unlobed","TreeHunt","setSelected","currentIndex","setCurrentIndex","newselect","unselectItem","filter","transform","totalSelectPage","right","left","App","setIsTipsOpen","setIsMapOpen","basename","window","pathname","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31b6295a.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport './About.css';\r\n\r\nexport default function About() {\r\n  return (\r\n    <section className=\"about\">\r\n      <h1>About</h1>\r\n      <p>\r\n        Alabama has over 140 state champion trees on the books and is home to\r\n        four national champions. Go to the champion tree map to explore them.\r\n      </p>\r\n      <Link to=\"/champion-map\">\r\n        <button className=\"home__button home__button-2\">\r\n          AL Champion Trees Map\r\n        </button>\r\n      </Link>\r\n      <p>\r\n        Want to know more about your neiborhood alabama native trees? Go to the\r\n        Neiborhood Tree hunt! Find the tree with QR tag, observe with us and\r\n        identify the tree. You could know more about them and earn badges.You\r\n        could be a dendrologist.\r\n      </p>\r\n      <Link to=\"/code-enter\">\r\n        <button className=\"home__button home__button-3\">Local Tree Hunt</button>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","import './ChampionCard.css';\r\n\r\nexport default function ChampionCard({\r\n  img_url,\r\n  name,\r\n  family,\r\n  sname,\r\n  kingdom,\r\n  Life,\r\n  description,\r\n  location,\r\n  circumference,\r\n  height,\r\n}) {\r\n  return (\r\n    <div className=\"championcard\">\r\n      <div>\r\n        <h2 className=\"championcard__title\">{name}</h2>\r\n        <div className=\"championcard__container\">\r\n          <img src={img_url} alt={name} className=\"championcard__img\" />\r\n\r\n          <div className=\"championcard__info-box\">\r\n            <p className=\"championcard__info\">\r\n              Location:<span>{location}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Circumference:<span>{circumference}</span>ft\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Height:<span>{height}</span>ft\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Family:<span>{family}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Scienctific name:\r\n              <br />\r\n              <span>{sname}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Kingdom:<span>{kingdom}</span>\r\n            </p>\r\n            <p className=\"championcard__info\">\r\n              Life expectancy:\r\n              <br />\r\n              <span>{Life}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p className=\"championcard__description\">{description}</p>\r\n      </div>\r\n      <div className=\"championcard__compare\">\r\n        <div\r\n          style={{ height: `calc(${height} / 6 * 20px)` }}\r\n          className=\"championcard__compare-tree\"\r\n        ></div>\r\n        <div className=\"championcard__compare-kid\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './ChampionMap.css';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport ChampionCard from '../ChampionCard/ChampionCard';\r\n\r\nexport default function ChampionMap() {\r\n  return (\r\n    <MapContainer\r\n      center={[32.5, -86.7]}\r\n      zoom={6.5}\r\n      scrollWheelZoom={false}\r\n      className=\"map\"\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Marker position={[32.95947947133575, -86.8595523288862]}>\r\n        <Popup>\r\n          <ChampionCard\r\n            img_url=\"https://images.unsplash.com/photo-1602693154446-9174be270281?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTUzfHxtYWdub2xpYSUyMGFjdW1pbmF0YXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=60\"\r\n            name=\"MAGNOLIA\"\r\n            family=\"Magnoliaceae\"\r\n            sname=\"Magnolia\"\r\n            kingdom=\"Plantae\"\r\n            Life=\"80 to 120 years\"\r\n            description=\"Magnolia is a large genus of about 210 flowering plant species in the subfamily Magnolioideae of the family Magnoliaceae. It is named after French botanist Pierre Magnol. Magnolia is an ancient genus. Appearing before bees did, the flowers are theorized to have evolved to encourage pollination by beetles.\"\r\n            location=\"Madison\"\r\n            circumference=\"112\"\r\n            height=\"156\"\r\n          />\r\n        </Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/lightbulb-solid.8d62fb45.svg\";","export default __webpack_public_path__ + \"static/media/map-marked.b7194aaf.svg\";","export default __webpack_public_path__ + \"static/media/times-solid.ea7c95d7.svg\";","import './Tips.css';\r\nimport close from '../../images/times-solid.svg';\r\n\r\nexport default function Tips({ isTipsOpen, toggleTips }) {\r\n  return (\r\n    <section className={isTipsOpen ? 'tips' : 'hidden'}>\r\n      <button className=\"tips__button-close\" onClick={toggleTips}>\r\n        <img src={close} alt=\"close\" className=\"tips__button-img\" />\r\n      </button>\r\n      <h1>Tips for Indentifing Trees</h1>\r\n      <ul>\r\n        <li>\r\n          Always start at the beginning of the key and follow it step by step.\r\n        </li>\r\n        <li>\r\n          Always read both choices, even if the first choice sounds correct. The\r\n          second one may sound even better.\r\n        </li>\r\n        <li>\r\n          If the choice between two statements is not clear, or you don’t have\r\n          enough information to make the choice, follow both choices to their\r\n          conclusions. Then, try to choose between the descriptions of the two\r\n          resulting answers.\r\n        </li>\r\n        <li>\r\n          When measurements are given, as in the size of the leaves, don’t\r\n          guess. Use a ruler.\r\n        </li>\r\n        <li>\r\n          Become familiar with the botanical terms used to describe trees.\r\n        </li>\r\n      </ul>\r\n      <p>&copy; ALABAMA A&M AND AUBURN UNIVERSITIES</p>\r\n    </section>\r\n  );\r\n}\r\n","export const treepins = [\r\n  /*{\r\n    name: 'Floating clouds maple',\r\n    coor: [34.7071568, -86.6321067],\r\n    code: [1, 4, 3, 2],\r\n  },*/\r\n  { name: 'Spanish Oak', coor: [34.708008, -86.634358] },\r\n  { name: 'Winged elm', coor: [34.706788, -86.634162] },\r\n  { name: 'September elm', coor: [34.707107, -86.634231] },\r\n  { name: 'Red cedar', coor: [34.707261, -86.634346] },\r\n  { name: 'Scarlet oak', coor: [34.707666, -86.634285] },\r\n  { name: 'Southern red oak', coor: [34.707714, -86.634333] },\r\n  { name: 'Old field pine', coor: [34.707951, -86.634298] },\r\n];\r\n","import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport './TreeHuntMap.css';\r\nimport { treepins } from '../../data/TreeHuntMap';\r\nimport close from '../../images/times-solid.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function TreeHuntMap({ isMapOpen, toggleMap }) {\r\n  return (\r\n    <section className=\"treehuntmap\">\r\n      <Link\r\n        to=\"/code-enter\"\r\n        className=\"treehuntmap__button-close\"\r\n        onClick={toggleMap}\r\n      >\r\n        <img src={close} alt=\"close\" className=\"tips__button-img\" />\r\n      </Link>\r\n      <MapContainer\r\n        center={[34.707261, -86.634346]}\r\n        zoom={20}\r\n        scrollWheelZoom={false}\r\n        className=\"treehunt__map\"\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {treepins.map((pin, i) => (\r\n          <Marker key={i} position={pin.coor}>\r\n            <Popup>\r\n              <p>{pin.name}</p>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </section>\r\n  );\r\n}\r\n","import { useState, React } from 'react';\r\nimport './CodeEnter.css';\r\nimport lightbulb from '../../images/lightbulb-solid.svg';\r\nimport map from '../../images/map-marked.svg';\r\nimport Tips from '../Tips/Tips';\r\nimport { Link } from 'react-router-dom';\r\nimport TreeHuntMap from '../TreeHuntMap/TreeHuntMap';\r\n\r\nexport default function CodeEnter({\r\n  isTipsOpen,\r\n  toggleTips,\r\n  isMapOpen,\r\n  toggleMap,\r\n}) {\r\n  console.log(isTipsOpen);\r\n  const numOfFields = 4;\r\n  const [ssnValues, setValue] = useState({\r\n    ssn1: '',\r\n    ssn2: '',\r\n    ssn3: '',\r\n  });\r\n  console.log(ssnValues);\r\n\r\n  const handleChange = (e) => {\r\n    const { maxLength, value, name } = e.target;\r\n    const [fieldName, fieldIndex] = name.split('-');\r\n    if (value.length >= maxLength) {\r\n      if (parseInt(fieldIndex, 10) < numOfFields) {\r\n        const nextSibling = document.querySelector(\r\n          `input[name=${fieldName}-${parseInt(fieldIndex, 10) + 1}]`\r\n        );\r\n        if (nextSibling !== null) {\r\n          nextSibling.focus();\r\n        }\r\n      }\r\n    }\r\n    setValue({\r\n      ...value,\r\n      [`ssn${fieldIndex}`]: value,\r\n    });\r\n  };\r\n  console.log(isMapOpen);\r\n  return (\r\n    <section className=\"codeenter\">\r\n      <Tips toggleTips={toggleTips} isTipsOpen={isTipsOpen} />\r\n      <h2 className=\"codeenter__title\">\r\n        <span className=\"codeenter__cap\">Welcome! </span>Get ready to indentify\r\n        the tree! You could get tips by clicking lightbulb button.\r\n      </h2>\r\n      <button className=\"coddenter__button-tip\" onClick={toggleTips}>\r\n        <img\r\n          src={lightbulb}\r\n          alt=\"got to tips\"\r\n          className=\"coddenter__button-img\"\r\n        />\r\n      </button>\r\n      <h2 className=\"codeenter__title\">\r\n        You could get tree hunt map by clicking map button.\r\n      </h2>\r\n      <Link\r\n        to=\"/treehunt-map\"\r\n        className=\"coddenter__button-tip\"\r\n        onClick={toggleMap}\r\n      >\r\n        <img\r\n          src={map}\r\n          alt=\"go to tree hunt map\"\r\n          className=\"coddenter__button-img-l\"\r\n        />\r\n      </Link>\r\n      <h2 className=\"codeenter__title\">Enter Four Digit Code</h2>\r\n      <form className=\"codeenter__form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"ssn-1\"\r\n          maxLength={1}\r\n          size=\"1\"\r\n          min=\"0\"\r\n          max=\"9\"\r\n          pattern=\"[0-9]{1}\"\r\n          className=\"codeenter__input\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"ssn-2\"\r\n          maxLength={1}\r\n          size=\"1\"\r\n          min=\"0\"\r\n          max=\"9\"\r\n          pattern=\"[0-9]{1}\"\r\n          className=\"codeenter__input\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"ssn-3\"\r\n          maxLength={1}\r\n          size=\"1\"\r\n          min=\"0\"\r\n          max=\"9\"\r\n          pattern=\"[0-9]{1}\"\r\n          className=\"codeenter__input\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"ssn-4\"\r\n          maxLength={1}\r\n          size=\"1\"\r\n          min=\"0\"\r\n          max=\"9\"\r\n          pattern=\"[0-9]{1}\"\r\n          className=\"codeenter__input\"\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n      <Link to=\"/TreeHunt\">\r\n        <button className=\"codeenter__button\">GO</button>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/treelogoW.b214c2ee.png\";","import { Link } from 'react-router-dom';\r\nimport './Home.css';\r\nimport logo from '../../images/treelogoW.png';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home__logo-box\">\r\n        <img src={logo} alt=\"Alabama trees logo\" className=\"home__logo\" />\r\n        <p className=\"home__text\">Alabama Trick Or Tree</p>\r\n        <p className=\"home__text\">Explore | Learn | Play</p>\r\n      </div>\r\n      <div className=\"home__button-box\">\r\n        <Link to=\"/about\">\r\n          <button className=\"home__button home__button-1\">Learn More</button>\r\n        </Link>\r\n        <Link to=\"/champion-map\">\r\n          <button className=\"home__button home__button-2\">\r\n            AL Champion Trees Map\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/code-enter\">\r\n          <button className=\"home__button home__button-3\">\r\n            Local Tree Hunt\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/left.e1553cb5.svg\";","export default __webpack_public_path__ + \"static/media/right.67c7cff6.svg\";","import { useState } from 'react';\r\nimport './Item.css';\r\n\r\nexport default function Item({\r\n  choice,\r\n  selected,\r\n  handleSelect,\r\n  handleUnselect,\r\n}) {\r\n  const [itemClass, setItemClass] = useState('selection__list-unselect');\r\n\r\n  function toggleSelect() {\r\n    if (selected.includes(choice.description)) {\r\n      handleUnselect(choice.description);\r\n      setItemClass('selection__list-unselect');\r\n      return;\r\n    }\r\n    handleSelect(choice.description);\r\n    setItemClass('selection__list-select');\r\n  }\r\n  return (\r\n    <li className=\"selection__list-item\" onClick={toggleSelect}>\r\n      <img\r\n        className={`${itemClass} selection__img`}\r\n        src={choice.image}\r\n        alt={choice.description}\r\n      />\r\n      <p className=\"selection__description\">{choice.description}</p>\r\n    </li>\r\n  );\r\n}\r\n","import Item from '../Item/Item';\r\nimport './Selection.css';\r\n\r\nexport default function Selection({\r\n  title,\r\n  choices,\r\n  n,\r\n  selected,\r\n  handleSelect,\r\n  handleUnselect,\r\n}) {\r\n  return (\r\n    <section className=\"selection\">\r\n      <h2 className=\"selection__title\">{title}</h2>\r\n      <ul\r\n        className=\"selection__list\"\r\n        style={{ gridTemplateColumns: `repeat(${n},1fr)` }}\r\n      >\r\n        {choices.map((choice, i) => (\r\n          <Item\r\n            choice={choice}\r\n            key={i}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/type-palmately-compound-leaf.76480091.PNG\";","export default __webpack_public_path__ + \"static/media/type-pinnately-compound-leaf.deb3b16a.PNG\";","export default __webpack_public_path__ + \"static/media/type-simple.0a879415.PNG\";","export default __webpack_public_path__ + \"static/media/type-twice-pinnately-compound-leaf.5ed2062c.PNG\";","export default __webpack_public_path__ + \"static/media/edge-smooth.66a0929d.PNG\";","export default __webpack_public_path__ + \"static/media/edge-coursely-serrate.89676c77.PNG\";","export default __webpack_public_path__ + \"static/media/edge-double-serrate.bdb539b3.PNG\";","export default __webpack_public_path__ + \"static/media/edge-tipped.f59d6015.PNG\";","export default __webpack_public_path__ + \"static/media/edge-tooth.95c235df.PNG\";","export default __webpack_public_path__ + \"static/media/edge-unlobed.013c07e7.PNG\";","export default __webpack_public_path__ + \"static/media/arangement-alternate.fe038689.PNG\";","export default __webpack_public_path__ + \"static/media/arangement-opposite.c24d0046.PNG\";","///type\r\nimport palmately_compound from '../images/type-palmately-compound-leaf.PNG';\r\nimport pinnately_compound from '../images/type-pinnately-compound-leaf.PNG';\r\nimport simple from '../images/type-simple.PNG';\r\nimport twice_pinnately_compound from '../images/type-twice-pinnately-compound-leaf.PNG';\r\n////edge\r\nimport smooth from '../images/edge-smooth.PNG';\r\nimport edge_coursely_serrate from '../images/edge-coursely-serrate.PNG';\r\nimport edge_double_serrate from '../images/edge-double-serrate.PNG';\r\nimport tipped from '../images/edge-tipped.PNG';\r\nimport tooth from '../images/edge-tooth.PNG';\r\nimport unlobed from '../images/edge-unlobed.PNG';\r\n/////arrange\r\nimport alternate from '../images/arangement-alternate.PNG';\r\nimport opposite from '../images/arangement-opposite.PNG';\r\n/////shape\r\nimport bell from '../images/shape-bell.PNG';\r\nimport cross from '../images/shape-cross.PNG';\r\nimport heart from '../images/shape-heart.PNG';\r\nimport linear from '../images/shape-linear.PNG';\r\nimport mitten from '../images/shape-mitten.PNG';\r\nimport needle from '../images/shape-needle-like.PNG';\r\nimport oblong from '../images/shape-oblong.PNG';\r\nimport oval from '../images/shape-oval.PNG';\r\nimport scale from '../images/shape-scale.PNG';\r\nimport spatula from '../images/shape-spatula.PNG';\r\nimport star from '../images/shape-star.PNG';\r\nimport triangle from '../images/shape-triangle.PNG';\r\nimport tulip from '../images/shape-tulip.PNG';\r\n\r\nexport const leafShape = {\r\n  title: 'Leaf Shape',\r\n  choices: [\r\n    { image: bell, description: 'Bell' },\r\n    { image: cross, description: 'Cross' },\r\n    { image: heart, description: 'Heart' },\r\n    { image: linear, description: 'Linear' },\r\n    { image: mitten, description: 'Mitten' },\r\n    { image: needle, description: 'Needle' },\r\n    { image: oblong, description: 'Oblong' },\r\n    { image: oval, description: 'Oval' },\r\n    { image: scale, description: 'Scale' },\r\n    { image: spatula, description: 'Spatula' },\r\n    { image: star, description: 'Star' },\r\n    { image: triangle, description: 'Triangle' },\r\n    { image: tulip, description: 'Tulip' },\r\n  ],\r\n};\r\n\r\nexport const leafArrange = {\r\n  title: 'Leaf Arrange',\r\n  choices: [\r\n    { image: alternate, description: 'Alternate' },\r\n    { image: opposite, description: 'Opposite' },\r\n  ],\r\n};\r\n\r\nexport const leafType = {\r\n  title: 'Leaf Type',\r\n  choices: [\r\n    {\r\n      image: palmately_compound,\r\n      description: 'Palmately Compound',\r\n    },\r\n    {\r\n      image: pinnately_compound,\r\n      description: 'Pinnately Compound',\r\n    },\r\n    {\r\n      image: simple,\r\n      description: 'Simple',\r\n    },\r\n    {\r\n      image: twice_pinnately_compound,\r\n      description: 'Twice Pinnately Compound',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const leafEdge = {\r\n  title: 'Leaf Edge',\r\n  choices: [\r\n    {\r\n      image: smooth,\r\n      description: 'Smooth',\r\n    },\r\n    {\r\n      image: edge_coursely_serrate,\r\n      description: 'Edge Coursely Serrate',\r\n    },\r\n    {\r\n      image: edge_double_serrate,\r\n      description: 'Edge Double Serrate',\r\n    },\r\n    {\r\n      image: tipped,\r\n      description: 'Tipped',\r\n    },\r\n    {\r\n      image: tooth,\r\n      description: 'Tooth',\r\n    },\r\n    {\r\n      image: unlobed,\r\n      description: 'Unlobed',\r\n    },\r\n  ],\r\n};\r\n","export default __webpack_public_path__ + \"static/media/shape-bell.ddf468c8.PNG\";","export default __webpack_public_path__ + \"static/media/shape-cross.ae66ad59.PNG\";","export default __webpack_public_path__ + \"static/media/shape-heart.52fa8d0b.PNG\";","export default __webpack_public_path__ + \"static/media/shape-linear.3dbba6b1.PNG\";","export default __webpack_public_path__ + \"static/media/shape-mitten.547c2149.PNG\";","export default __webpack_public_path__ + \"static/media/shape-needle-like.e3e3532f.PNG\";","export default __webpack_public_path__ + \"static/media/shape-oblong.9124c2f0.PNG\";","export default __webpack_public_path__ + \"static/media/shape-oval.8ff41a8e.PNG\";","export default __webpack_public_path__ + \"static/media/shape-scale.6d17d42e.PNG\";","export default __webpack_public_path__ + \"static/media/shape-spatula.51cdabab.PNG\";","export default __webpack_public_path__ + \"static/media/shape-star.6e4ec36d.PNG\";","export default __webpack_public_path__ + \"static/media/shape-triangle.db0cc738.PNG\";","export default __webpack_public_path__ + \"static/media/shape-tulip.90b78a69.PNG\";","import './TreeHunt.css';\r\nimport lightbulb from '../../images/lightbulb-solid.svg';\r\nimport left from '../../images/left.svg';\r\nimport right from '../../images/right.svg';\r\nimport Tips from '../Tips/Tips';\r\nimport Selection from '../Selection/Selection';\r\nimport {\r\n  leafType,\r\n  leafEdge,\r\n  leafArrange,\r\n  leafShape,\r\n} from '../../data/LeafClass';\r\nimport { useState } from 'react';\r\n\r\nexport default function TreeHunt({ toggleTips, isTipsOpen }) {\r\n  const [selected, setSelected] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const totalSelectPage = 2;\r\n\r\n  function moveRight() {\r\n    if (currentIndex >= totalSelectPage - 1) {\r\n      setCurrentIndex(totalSelectPage - 1);\r\n      return;\r\n    }\r\n    setCurrentIndex(currentIndex + 1);\r\n  }\r\n\r\n  function moveLeft() {\r\n    if (currentIndex <= 0) {\r\n      setCurrentIndex(0);\r\n      return;\r\n    }\r\n    setCurrentIndex(currentIndex - 1);\r\n  }\r\n\r\n  function handleSelect(newselect) {\r\n    setSelected([...selected, newselect]);\r\n  }\r\n  function handleUnselect(unselectItem) {\r\n    setSelected(selected.filter((i) => i !== unselectItem));\r\n  }\r\n\r\n  return (\r\n    <section className=\"treehunt\">\r\n      <Tips toggleTips={toggleTips} isTipsOpen={isTipsOpen} />\r\n      <div className=\"treehunt__title-box\">\r\n        <h2 className=\"treehunt__title\">Pick the best one</h2>\r\n        <button className=\"coddenter__button-tip\" onClick={toggleTips}>\r\n          <img src={lightbulb} alt=\"tips\" className=\"coddenter__button-img\" />\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"treehunt__container\"\r\n        style={{\r\n          transform: `translateX(calc(100vw * -${currentIndex}))`,\r\n        }}\r\n      >\r\n        <div className=\"treehunt__items\">\r\n          <Selection\r\n            title={leafType.title}\r\n            choices={leafType.choices}\r\n            n={4}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <Selection\r\n            title={leafEdge.title}\r\n            choices={leafEdge.choices}\r\n            n={6}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <Selection\r\n            title={leafArrange.title}\r\n            choices={leafArrange.choices}\r\n            n={2}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <button className=\"treehunt__button\" onClick={moveRight}>\r\n            Next\r\n            <img\r\n              src={right}\r\n              alt=\"next right\"\r\n              className=\"treehunt__button-img\"\r\n            />\r\n          </button>\r\n        </div>\r\n        <div className=\"treehunt__items\">\r\n          <Selection\r\n            title={leafShape.title}\r\n            choices={leafShape.choices}\r\n            n={4}\r\n            selected={selected}\r\n            handleSelect={handleSelect}\r\n            handleUnselect={handleUnselect}\r\n          />\r\n          <button className=\"treehunt__button\" onClick={moveLeft}>\r\n            <img src={left} alt=\"next left\" className=\"treehunt__button-img\" />\r\n            Back\r\n          </button>\r\n          <button className=\"treehunt__button-check\">Check</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import { useState, React } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport About from './component/About/About';\r\nimport ChampionMap from './component/ChampionMap/ChampionMap';\r\nimport CodeEnter from './component/CodeEnter/CodeEnter';\r\nimport Home from './component/Home/Home';\r\nimport TreeHunt from './component/TreeHunt/TreeHunt';\r\nimport TreeHuntMap from './component/TreeHuntMap/TreeHuntMap';\r\n\r\nfunction App() {\r\n  const [isTipsOpen, setIsTipsOpen] = useState(false);\r\n  const [isMapOpen, setIsMapOpen] = useState(true);\r\n  function toggleTips() {\r\n    setIsTipsOpen(!isTipsOpen);\r\n  }\r\n\r\n  function toggleMap() {\r\n    setIsMapOpen(!isMapOpen);\r\n  }\r\n\r\n  return (\r\n    <Router basename={window.location.pathname || ''}>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/champion-map\">\r\n            <ChampionMap />\r\n          </Route>\r\n          <Route path=\"/treehunt-map\">\r\n            <TreeHuntMap />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/code-enter\">\r\n            <CodeEnter\r\n              isTipsOpen={isTipsOpen}\r\n              toggleTips={toggleTips}\r\n              isMapOpen={isMapOpen}\r\n              toggleMap={toggleMap}\r\n            />\r\n          </Route>\r\n          <Route path=\"/treehunt\">\r\n            <TreeHunt\r\n              toggleTips={toggleTips}\r\n              isTipsOpen={isTipsOpen}\r\n              isMapOpen={isMapOpen}\r\n              toggleMap={toggleMap}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}